/* esm.sh - esbuild bundle(three@0.169.0/examples/jsm/libs/ktx-parse.module) es2022 production */
var z=0,W=1,Z=2,Q=3,j=0,q=0,J=2,$=0,__=1,t_=160,e_=161,s_=162,n_=163,R_=166,a_=0,A_=1,i_=0,O_=1,T_=2,K_=3,F_=4,M_=5,r_=6,B_=7,o_=8,U_=9,S_=10,l_=11,C_=12,V_=13,L_=14,N_=15,f_=16,D_=17,G_=18,h_=0,E_=1,c_=2,x_=3,I_=4,P_=5,p_=6,g_=7,y_=8,u_=9,b_=10,d_=11,H_=0,w_=1,m_=2,X_=13,v_=14,k_=15,Y_=128,z_=64,W_=32,Z_=16,Q_=0,j_=1,q_=2,J_=3,$_=4,_t=5,tt=6,et=7,st=8,nt=9,Rt=10,at=13,At=14,it=15,Ot=16,Tt=17,Kt=20,Ft=21,Mt=22,rt=23,Bt=24,ot=27,Ut=28,St=29,lt=30,Ct=31,Vt=34,Lt=35,Nt=36,ft=37,Dt=38,Gt=41,ht=42,Et=43,ct=44,xt=45,It=48,Pt=49,pt=50,gt=58,yt=59,ut=62,bt=63,dt=64,Ht=65,wt=68,mt=69,Xt=70,vt=71,kt=74,Yt=75,zt=76,Wt=77,Zt=78,Qt=81,jt=82,qt=83,Jt=84,$t=85,_e=88,te=89,ee=90,se=91,ne=92,Re=95,ae=96,Ae=97,ie=98,Oe=99,Te=100,Ke=101,Fe=102,Me=103,re=104,Be=105,oe=106,Ue=107,Se=108,le=109,Ce=110,Ve=111,Le=112,Ne=113,fe=114,De=115,Ge=116,he=117,Ee=118,ce=119,xe=120,Ie=121,Pe=122,pe=123,ge=124,ye=125,ue=126,be=127,de=128,He=129,we=130,me=131,Xe=132,ve=133,ke=134,Ye=135,ze=136,We=137,Ze=138,Qe=139,je=140,qe=141,Je=142,$e=143,_s=144,ts=145,es=146,ss=147,ns=148,Rs=149,as=150,As=151,is=152,Os=153,Ts=154,Ks=155,Fs=156,Ms=157,rs=158,Bs=159,os=160,Us=161,Ss=162,ls=163,Cs=164,Vs=165,Ls=166,Ns=167,fs=168,Ds=169,Gs=170,hs=171,Es=172,cs=173,xs=174,Is=175,Ps=176,ps=177,gs=178,ys=179,us=180,bs=181,ds=182,Hs=183,ws=184,ms=1000156007,Xs=1000156008,vs=1000156009,ks=1000156010,Ys=1000156011,zs=1000156017,Ws=1000156018,Zs=1000156019,Qs=1000156020,js=1000156021,qs=1000054e3,Js=1000054001,$s=1000054002,_n=1000054003,tn=1000054004,en=1000054005,sn=1000054006,nn=1000054007,Rn=1000066e3,an=1000066001,An=1000066002,On=1000066003,Tn=1000066004,Kn=1000066005,Fn=1000066006,Mn=1000066007,rn=1000066008,Bn=1000066009,on=1000066010,Un=1000066011,Sn=1000066012,ln=1000066013,Cn=100034e4,Vn=1000340001,u=class{constructor(){this.vkFormat=0,this.typeSize=1,this.pixelWidth=0,this.pixelHeight=0,this.pixelDepth=0,this.layerCount=0,this.faceCount=1,this.supercompressionScheme=0,this.levels=[],this.dataFormatDescriptor=[{vendorId:0,descriptorType:0,descriptorBlockSize:0,versionNumber:2,colorModel:0,colorPrimaries:1,transferFunction:2,flags:0,texelBlockDimension:[0,0,0,0],bytesPlane:[0,0,0,0,0,0,0,0],samples:[]}],this.keyValue={},this.globalData=null}},D=class{constructor(e,n,B,A){this._dataView=void 0,this._littleEndian=void 0,this._offset=void 0,this._dataView=new DataView(e.buffer,e.byteOffset+n,B),this._littleEndian=A,this._offset=0}_nextUint8(){let e=this._dataView.getUint8(this._offset);return this._offset+=1,e}_nextUint16(){let e=this._dataView.getUint16(this._offset,this._littleEndian);return this._offset+=2,e}_nextUint32(){let e=this._dataView.getUint32(this._offset,this._littleEndian);return this._offset+=4,e}_nextUint64(){let e=this._dataView.getUint32(this._offset,this._littleEndian)+4294967296*this._dataView.getUint32(this._offset+4,this._littleEndian);return this._offset+=8,e}_nextInt32(){let e=this._dataView.getInt32(this._offset,this._littleEndian);return this._offset+=4,e}_nextUint8Array(e){let n=new Uint8Array(this._dataView.buffer,this._dataView.byteOffset+this._offset,e);return this._offset+=e,n}_skip(e){return this._offset+=e,this}_scan(e,n){n===void 0&&(n=0);let B=this._offset,A=0;for(;this._dataView.getUint8(this._offset)!==n&&A<e;)A++,this._offset++;return A<e&&this._offset++,new Uint8Array(this._dataView.buffer,this._dataView.byteOffset+B,A)}},d=new Uint8Array([0]),M=[171,75,84,88,32,50,48,187,13,10,26,10];function H(_){return new TextEncoder().encode(_)}function w(_){return new TextDecoder().decode(_)}function c(_){let e=0;for(let A of _)e+=A.byteLength;let n=new Uint8Array(e),B=0;for(let A of _)n.set(new Uint8Array(A),B),B+=A.byteLength;return n}function m(_,e){return e===void 0&&(e=4),Math.ceil(_/e)*e-_}function Ln(_){let e=new Uint8Array(_.buffer,_.byteOffset,M.length);if(e[0]!==M[0]||e[1]!==M[1]||e[2]!==M[2]||e[3]!==M[3]||e[4]!==M[4]||e[5]!==M[5]||e[6]!==M[6]||e[7]!==M[7]||e[8]!==M[8]||e[9]!==M[9]||e[10]!==M[10]||e[11]!==M[11])throw new Error("Missing KTX 2.0 identifier.");let n=new u,B=17*Uint32Array.BYTES_PER_ELEMENT,A=new D(_,M.length,B,!0);n.vkFormat=A._nextUint32(),n.typeSize=A._nextUint32(),n.pixelWidth=A._nextUint32(),n.pixelHeight=A._nextUint32(),n.pixelDepth=A._nextUint32(),n.layerCount=A._nextUint32(),n.faceCount=A._nextUint32();let l=A._nextUint32();n.supercompressionScheme=A._nextUint32();let O=A._nextUint32(),N=A._nextUint32(),i=A._nextUint32(),x=A._nextUint32(),E=A._nextUint64(),f=A._nextUint64(),U=new D(_,M.length+B,3*l*8,!0);for(let r=0;r<l;r++)n.levels.push({levelData:new Uint8Array(_.buffer,_.byteOffset+U._nextUint64(),U._nextUint64()),uncompressedByteLength:U._nextUint64()});let R=new D(_,O,N,!0),L={vendorId:R._skip(4)._nextUint16(),descriptorType:R._nextUint16(),versionNumber:R._nextUint16(),descriptorBlockSize:R._nextUint16(),colorModel:R._nextUint8(),colorPrimaries:R._nextUint8(),transferFunction:R._nextUint8(),flags:R._nextUint8(),texelBlockDimension:[R._nextUint8(),R._nextUint8(),R._nextUint8(),R._nextUint8()],bytesPlane:[R._nextUint8(),R._nextUint8(),R._nextUint8(),R._nextUint8(),R._nextUint8(),R._nextUint8(),R._nextUint8(),R._nextUint8()],samples:[]},I=(L.descriptorBlockSize/4-6)/4;for(let r=0;r<I;r++){let V={bitOffset:R._nextUint16(),bitLength:R._nextUint8(),channelType:R._nextUint8(),samplePosition:[R._nextUint8(),R._nextUint8(),R._nextUint8(),R._nextUint8()],sampleLower:-1/0,sampleUpper:1/0};64&V.channelType?(V.sampleLower=R._nextInt32(),V.sampleUpper=R._nextInt32()):(V.sampleLower=R._nextUint32(),V.sampleUpper=R._nextUint32()),L.samples[r]=V}n.dataFormatDescriptor.length=0,n.dataFormatDescriptor.push(L);let C=new D(_,i,x,!0);for(;C._offset<x;){let r=C._nextUint32(),V=C._scan(r),p=w(V);if(n.keyValue[p]=C._nextUint8Array(r-V.byteLength-1),p.match(/^ktx/i)){let b=w(n.keyValue[p]);n.keyValue[p]=b.substring(0,b.lastIndexOf("\0"))}C._skip(r%4?4-r%4:0)}if(f<=0)return n;let T=new D(_,E,f,!0),P=T._nextUint16(),K=T._nextUint16(),s=T._nextUint32(),t=T._nextUint32(),a=T._nextUint32(),F=T._nextUint32(),o=[];for(let r=0;r<l;r++)o.push({imageFlags:T._nextUint32(),rgbSliceByteOffset:T._nextUint32(),rgbSliceByteLength:T._nextUint32(),alphaSliceByteOffset:T._nextUint32(),alphaSliceByteLength:T._nextUint32()});let G=E+T._offset,S=G+s,h=S+t,g=h+a,y=new Uint8Array(_.buffer,_.byteOffset+G,s),X=new Uint8Array(_.buffer,_.byteOffset+S,t),v=new Uint8Array(_.buffer,_.byteOffset+h,a),k=new Uint8Array(_.buffer,_.byteOffset+g,F);return n.globalData={endpointCount:P,selectorCount:K,imageDescs:o,endpointsData:y,selectorsData:X,tablesData:v,extendedData:k},n}var Y={keepWriter:!1};function Nn(_,e){e===void 0&&(e={}),e={...Y,...e};let n=new ArrayBuffer(0);if(_.globalData){let s=new ArrayBuffer(20+5*_.globalData.imageDescs.length*4),t=new DataView(s);t.setUint16(0,_.globalData.endpointCount,!0),t.setUint16(2,_.globalData.selectorCount,!0),t.setUint32(4,_.globalData.endpointsData.byteLength,!0),t.setUint32(8,_.globalData.selectorsData.byteLength,!0),t.setUint32(12,_.globalData.tablesData.byteLength,!0),t.setUint32(16,_.globalData.extendedData.byteLength,!0);for(let a=0;a<_.globalData.imageDescs.length;a++){let F=_.globalData.imageDescs[a];t.setUint32(20+5*a*4+0,F.imageFlags,!0),t.setUint32(20+5*a*4+4,F.rgbSliceByteOffset,!0),t.setUint32(20+5*a*4+8,F.rgbSliceByteLength,!0),t.setUint32(20+5*a*4+12,F.alphaSliceByteOffset,!0),t.setUint32(20+5*a*4+16,F.alphaSliceByteLength,!0)}n=c([s,_.globalData.endpointsData,_.globalData.selectorsData,_.globalData.tablesData,_.globalData.extendedData])}let B=[],A=_.keyValue;e.keepWriter||(A={..._.keyValue,KTXwriter:"KTX-Parse v0.7.1"});for(let s in A){let t=A[s],a=H(s),F=typeof t=="string"?c([H(t),d]):t,o=a.byteLength+1+F.byteLength,G=m(o,4);B.push(c([new Uint32Array([o]),a,d,F,new Uint8Array(G).fill(0)]))}let l=c(B);if(_.dataFormatDescriptor.length!==1||_.dataFormatDescriptor[0].descriptorType!==0)throw new Error("Only BASICFORMAT Data Format Descriptor output supported.");let O=_.dataFormatDescriptor[0],N=new ArrayBuffer(28+16*O.samples.length),i=new DataView(N),x=24+16*O.samples.length;if(i.setUint32(0,N.byteLength,!0),i.setUint16(4,O.vendorId,!0),i.setUint16(6,O.descriptorType,!0),i.setUint16(8,O.versionNumber,!0),i.setUint16(10,x,!0),i.setUint8(12,O.colorModel),i.setUint8(13,O.colorPrimaries),i.setUint8(14,O.transferFunction),i.setUint8(15,O.flags),!Array.isArray(O.texelBlockDimension))throw new Error("texelBlockDimension is now an array. For dimensionality `d`, set `d - 1`.");i.setUint8(16,O.texelBlockDimension[0]),i.setUint8(17,O.texelBlockDimension[1]),i.setUint8(18,O.texelBlockDimension[2]),i.setUint8(19,O.texelBlockDimension[3]);for(let s=0;s<8;s++)i.setUint8(20+s,O.bytesPlane[s]);for(let s=0;s<O.samples.length;s++){let t=O.samples[s],a=28+16*s;if(t.channelID)throw new Error("channelID has been renamed to channelType.");i.setUint16(a+0,t.bitOffset,!0),i.setUint8(a+2,t.bitLength),i.setUint8(a+3,t.channelType),i.setUint8(a+4,t.samplePosition[0]),i.setUint8(a+5,t.samplePosition[1]),i.setUint8(a+6,t.samplePosition[2]),i.setUint8(a+7,t.samplePosition[3]),64&t.channelType?(i.setInt32(a+8,t.sampleLower,!0),i.setInt32(a+12,t.sampleUpper,!0)):(i.setUint32(a+8,t.sampleLower,!0),i.setUint32(a+12,t.sampleUpper,!0))}let E=M.length+68+3*_.levels.length*8,f=E+N.byteLength,U=n.byteLength>0?f+l.byteLength:0;U%8&&(U+=8-U%8);let R=[],L=new DataView(new ArrayBuffer(3*_.levels.length*8)),I=new Uint32Array(_.levels.length),C=0;_.supercompressionScheme===0&&(C=function(s,t){let a=Math.max(s,4),F=Math.min(s,4),o=a;for(;o%F!=0;)o+=a;return o}(function(s){return s.levels[0].levelData.byteLength/function(t,a){let F=1,o=[t.pixelWidth,t.pixelHeight,t.pixelDepth],G=function(S){let[h,g,y]=S.dataFormatDescriptor[0].texelBlockDimension;return[h+1,g+1,y+1]}(t);for(let S=0;S<3;S++)if(o[S]>0){let h=Math.ceil(Math.floor(o[S]*Math.pow(2,-0))/G[S]);F*=Math.max(1,h)}return t.layerCount>0&&(F*=t.layerCount),t.faceCount>0&&(F*=t.faceCount),F}(s)}(_)));let T=(U||f+l.byteLength)+n.byteLength;for(let s=_.levels.length-1;s>=0;s--){if(T%C){let a=m(T,C);R.push(new Uint8Array(a)),T+=a}let t=_.levels[s];R.push(t.levelData),I[s]=T,T+=t.levelData.byteLength}for(let s=0;s<_.levels.length;s++){let t=_.levels[s];L.setBigUint64(24*s+0,BigInt(I[s]),!0),L.setBigUint64(24*s+8,BigInt(t.levelData.byteLength),!0),L.setBigUint64(24*s+16,BigInt(t.uncompressedByteLength),!0)}let P=new ArrayBuffer(68),K=new DataView(P);return K.setUint32(0,_.vkFormat,!0),K.setUint32(4,_.typeSize,!0),K.setUint32(8,_.pixelWidth,!0),K.setUint32(12,_.pixelHeight,!0),K.setUint32(16,_.pixelDepth,!0),K.setUint32(20,_.layerCount,!0),K.setUint32(24,_.faceCount,!0),K.setUint32(28,_.levels.length,!0),K.setUint32(32,_.supercompressionScheme,!0),K.setUint32(36,E,!0),K.setUint32(40,N.byteLength,!0),K.setUint32(44,f,!0),K.setUint32(48,l.byteLength,!0),K.setBigUint64(52,BigInt(n.byteLength>0?U:0),!0),K.setBigUint64(60,BigInt(n.byteLength),!0),new Uint8Array(c([new Uint8Array(M).buffer,P,L.buffer,N,l,U>0?new ArrayBuffer(U-(f+l.byteLength)):new ArrayBuffer(0),n,...R]))}export{k_ as KHR_DF_CHANNEL_RGBSDA_ALPHA,m_ as KHR_DF_CHANNEL_RGBSDA_BLUE,v_ as KHR_DF_CHANNEL_RGBSDA_DEPTH,w_ as KHR_DF_CHANNEL_RGBSDA_GREEN,H_ as KHR_DF_CHANNEL_RGBSDA_RED,X_ as KHR_DF_CHANNEL_RGBSDA_STENCIL,A_ as KHR_DF_FLAG_ALPHA_PREMULTIPLIED,a_ as KHR_DF_FLAG_ALPHA_STRAIGHT,j as KHR_DF_KHR_DESCRIPTORTYPE_BASICFORMAT,s_ as KHR_DF_MODEL_ASTC,t_ as KHR_DF_MODEL_ETC1,n_ as KHR_DF_MODEL_ETC1S,e_ as KHR_DF_MODEL_ETC2,__ as KHR_DF_MODEL_RGBSDA,R_ as KHR_DF_MODEL_UASTC,$ as KHR_DF_MODEL_UNSPECIFIED,p_ as KHR_DF_PRIMARIES_ACES,g_ as KHR_DF_PRIMARIES_ACESCC,d_ as KHR_DF_PRIMARIES_ADOBERGB,I_ as KHR_DF_PRIMARIES_BT2020,c_ as KHR_DF_PRIMARIES_BT601_EBU,x_ as KHR_DF_PRIMARIES_BT601_SMPTE,E_ as KHR_DF_PRIMARIES_BT709,P_ as KHR_DF_PRIMARIES_CIEXYZ,b_ as KHR_DF_PRIMARIES_DISPLAYP3,y_ as KHR_DF_PRIMARIES_NTSC1953,u_ as KHR_DF_PRIMARIES_PAL525,h_ as KHR_DF_PRIMARIES_UNSPECIFIED,W_ as KHR_DF_SAMPLE_DATATYPE_EXPONENT,Y_ as KHR_DF_SAMPLE_DATATYPE_FLOAT,Z_ as KHR_DF_SAMPLE_DATATYPE_LINEAR,z_ as KHR_DF_SAMPLE_DATATYPE_SIGNED,f_ as KHR_DF_TRANSFER_ACESCC,D_ as KHR_DF_TRANSFER_ACESCCT,G_ as KHR_DF_TRANSFER_ADOBERGB,B_ as KHR_DF_TRANSFER_BT1886,C_ as KHR_DF_TRANSFER_DCIP3,U_ as KHR_DF_TRANSFER_HLG_EOTF,o_ as KHR_DF_TRANSFER_HLG_OETF,K_ as KHR_DF_TRANSFER_ITU,O_ as KHR_DF_TRANSFER_LINEAR,F_ as KHR_DF_TRANSFER_NTSC,L_ as KHR_DF_TRANSFER_PAL625_EOTF,V_ as KHR_DF_TRANSFER_PAL_OETF,S_ as KHR_DF_TRANSFER_PQ_EOTF,l_ as KHR_DF_TRANSFER_PQ_OETF,M_ as KHR_DF_TRANSFER_SLOG,r_ as KHR_DF_TRANSFER_SLOG2,T_ as KHR_DF_TRANSFER_SRGB,N_ as KHR_DF_TRANSFER_ST240,i_ as KHR_DF_TRANSFER_UNSPECIFIED,q as KHR_DF_VENDORID_KHRONOS,J as KHR_DF_VERSION,W as KHR_SUPERCOMPRESSION_BASISLZ,z as KHR_SUPERCOMPRESSION_NONE,Q as KHR_SUPERCOMPRESSION_ZLIB,Z as KHR_SUPERCOMPRESSION_ZSTD,u as KTX2Container,st as VK_FORMAT_A1R5G5B5_UNORM_PACK16,mt as VK_FORMAT_A2B10G10R10_SINT_PACK32,Ht as VK_FORMAT_A2B10G10R10_SNORM_PACK32,wt as VK_FORMAT_A2B10G10R10_UINT_PACK32,dt as VK_FORMAT_A2B10G10R10_UNORM_PACK32,bt as VK_FORMAT_A2R10G10B10_SINT_PACK32,yt as VK_FORMAT_A2R10G10B10_SNORM_PACK32,ut as VK_FORMAT_A2R10G10B10_UINT_PACK32,gt as VK_FORMAT_A2R10G10B10_UNORM_PACK32,Vn as VK_FORMAT_A4B4G4R4_UNORM_PACK16_EXT,Cn as VK_FORMAT_A4R4G4B4_UNORM_PACK16_EXT,Un as VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK_EXT,us as VK_FORMAT_ASTC_10x10_SRGB_BLOCK,ys as VK_FORMAT_ASTC_10x10_UNORM_BLOCK,rn as VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK_EXT,xs as VK_FORMAT_ASTC_10x5_SRGB_BLOCK,cs as VK_FORMAT_ASTC_10x5_UNORM_BLOCK,Bn as VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK_EXT,Ps as VK_FORMAT_ASTC_10x6_SRGB_BLOCK,Is as VK_FORMAT_ASTC_10x6_UNORM_BLOCK,on as VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK_EXT,gs as VK_FORMAT_ASTC_10x8_SRGB_BLOCK,ps as VK_FORMAT_ASTC_10x8_UNORM_BLOCK,Sn as VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK_EXT,ds as VK_FORMAT_ASTC_12x10_SRGB_BLOCK,bs as VK_FORMAT_ASTC_12x10_UNORM_BLOCK,ln as VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK_EXT,ws as VK_FORMAT_ASTC_12x12_SRGB_BLOCK,Hs as VK_FORMAT_ASTC_12x12_UNORM_BLOCK,Rn as VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK_EXT,rs as VK_FORMAT_ASTC_4x4_SRGB_BLOCK,Ms as VK_FORMAT_ASTC_4x4_UNORM_BLOCK,an as VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK_EXT,os as VK_FORMAT_ASTC_5x4_SRGB_BLOCK,Bs as VK_FORMAT_ASTC_5x4_UNORM_BLOCK,An as VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK_EXT,Ss as VK_FORMAT_ASTC_5x5_SRGB_BLOCK,Us as VK_FORMAT_ASTC_5x5_UNORM_BLOCK,On as VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK_EXT,Cs as VK_FORMAT_ASTC_6x5_SRGB_BLOCK,ls as VK_FORMAT_ASTC_6x5_UNORM_BLOCK,Tn as VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK_EXT,Ls as VK_FORMAT_ASTC_6x6_SRGB_BLOCK,Vs as VK_FORMAT_ASTC_6x6_UNORM_BLOCK,Kn as VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK_EXT,fs as VK_FORMAT_ASTC_8x5_SRGB_BLOCK,Ns as VK_FORMAT_ASTC_8x5_UNORM_BLOCK,Fn as VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK_EXT,Gs as VK_FORMAT_ASTC_8x6_SRGB_BLOCK,Ds as VK_FORMAT_ASTC_8x6_UNORM_BLOCK,Mn as VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK_EXT,Es as VK_FORMAT_ASTC_8x8_SRGB_BLOCK,hs as VK_FORMAT_ASTC_8x8_UNORM_BLOCK,Pe as VK_FORMAT_B10G11R11_UFLOAT_PACK32,Ys as VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16,js as VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16,J_ as VK_FORMAT_B4G4R4A4_UNORM_PACK16,et as VK_FORMAT_B5G5R5A1_UNORM_PACK16,_t as VK_FORMAT_B5G6R5_UNORM_PACK16,Pt as VK_FORMAT_B8G8R8A8_SINT,xt as VK_FORMAT_B8G8R8A8_SNORM,pt as VK_FORMAT_B8G8R8A8_SRGB,It as VK_FORMAT_B8G8R8A8_UINT,ct as VK_FORMAT_B8G8R8A8_UNORM,Lt as VK_FORMAT_B8G8R8_SINT,Ct as VK_FORMAT_B8G8R8_SNORM,Nt as VK_FORMAT_B8G8R8_SRGB,Vt as VK_FORMAT_B8G8R8_UINT,lt as VK_FORMAT_B8G8R8_UNORM,ke as VK_FORMAT_BC1_RGBA_SRGB_BLOCK,ve as VK_FORMAT_BC1_RGBA_UNORM_BLOCK,Xe as VK_FORMAT_BC1_RGB_SRGB_BLOCK,me as VK_FORMAT_BC1_RGB_UNORM_BLOCK,ze as VK_FORMAT_BC2_SRGB_BLOCK,Ye as VK_FORMAT_BC2_UNORM_BLOCK,Ze as VK_FORMAT_BC3_SRGB_BLOCK,We as VK_FORMAT_BC3_UNORM_BLOCK,je as VK_FORMAT_BC4_SNORM_BLOCK,Qe as VK_FORMAT_BC4_UNORM_BLOCK,Je as VK_FORMAT_BC5_SNORM_BLOCK,qe as VK_FORMAT_BC5_UNORM_BLOCK,_s as VK_FORMAT_BC6H_SFLOAT_BLOCK,$e as VK_FORMAT_BC6H_UFLOAT_BLOCK,es as VK_FORMAT_BC7_SRGB_BLOCK,ts as VK_FORMAT_BC7_UNORM_BLOCK,ge as VK_FORMAT_D16_UNORM,de as VK_FORMAT_D16_UNORM_S8_UINT,He as VK_FORMAT_D24_UNORM_S8_UINT,ue as VK_FORMAT_D32_SFLOAT,we as VK_FORMAT_D32_SFLOAT_S8_UINT,pe as VK_FORMAT_E5B9G9R9_UFLOAT_PACK32,Fs as VK_FORMAT_EAC_R11G11_SNORM_BLOCK,Ks as VK_FORMAT_EAC_R11G11_UNORM_BLOCK,Ts as VK_FORMAT_EAC_R11_SNORM_BLOCK,Os as VK_FORMAT_EAC_R11_UNORM_BLOCK,as as VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK,Rs as VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK,is as VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK,As as VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK,ns as VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK,ss as VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK,ks as VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16,Qs as VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16,tn as VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG,qs as VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG,en as VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG,Js as VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG,sn as VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG,$s as VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG,nn as VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG,_n as VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG,vs as VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16,Xs as VK_FORMAT_R10X6G10X6_UNORM_2PACK16,ms as VK_FORMAT_R10X6_UNORM_PACK16,Zs as VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16,Ws as VK_FORMAT_R12X4G12X4_UNORM_2PACK16,zs as VK_FORMAT_R12X4_UNORM_PACK16,Ae as VK_FORMAT_R16G16B16A16_SFLOAT,ae as VK_FORMAT_R16G16B16A16_SINT,ne as VK_FORMAT_R16G16B16A16_SNORM,Re as VK_FORMAT_R16G16B16A16_UINT,se as VK_FORMAT_R16G16B16A16_UNORM,ee as VK_FORMAT_R16G16B16_SFLOAT,te as VK_FORMAT_R16G16B16_SINT,$t as VK_FORMAT_R16G16B16_SNORM,_e as VK_FORMAT_R16G16B16_UINT,Jt as VK_FORMAT_R16G16B16_UNORM,qt as VK_FORMAT_R16G16_SFLOAT,jt as VK_FORMAT_R16G16_SINT,Zt as VK_FORMAT_R16G16_SNORM,Qt as VK_FORMAT_R16G16_UINT,Wt as VK_FORMAT_R16G16_UNORM,zt as VK_FORMAT_R16_SFLOAT,Yt as VK_FORMAT_R16_SINT,vt as VK_FORMAT_R16_SNORM,kt as VK_FORMAT_R16_UINT,Xt as VK_FORMAT_R16_UNORM,le as VK_FORMAT_R32G32B32A32_SFLOAT,Se as VK_FORMAT_R32G32B32A32_SINT,Ue as VK_FORMAT_R32G32B32A32_UINT,oe as VK_FORMAT_R32G32B32_SFLOAT,Be as VK_FORMAT_R32G32B32_SINT,re as VK_FORMAT_R32G32B32_UINT,Me as VK_FORMAT_R32G32_SFLOAT,Fe as VK_FORMAT_R32G32_SINT,Ke as VK_FORMAT_R32G32_UINT,Te as VK_FORMAT_R32_SFLOAT,Oe as VK_FORMAT_R32_SINT,ie as VK_FORMAT_R32_UINT,q_ as VK_FORMAT_R4G4B4A4_UNORM_PACK16,j_ as VK_FORMAT_R4G4_UNORM_PACK8,tt as VK_FORMAT_R5G5B5A1_UNORM_PACK16,$_ as VK_FORMAT_R5G6B5_UNORM_PACK16,Ie as VK_FORMAT_R64G64B64A64_SFLOAT,xe as VK_FORMAT_R64G64B64A64_SINT,ce as VK_FORMAT_R64G64B64A64_UINT,Ee as VK_FORMAT_R64G64B64_SFLOAT,he as VK_FORMAT_R64G64B64_SINT,Ge as VK_FORMAT_R64G64B64_UINT,De as VK_FORMAT_R64G64_SFLOAT,fe as VK_FORMAT_R64G64_SINT,Ne as VK_FORMAT_R64G64_UINT,Le as VK_FORMAT_R64_SFLOAT,Ve as VK_FORMAT_R64_SINT,Ce as VK_FORMAT_R64_UINT,ht as VK_FORMAT_R8G8B8A8_SINT,Dt as VK_FORMAT_R8G8B8A8_SNORM,Et as VK_FORMAT_R8G8B8A8_SRGB,Gt as VK_FORMAT_R8G8B8A8_UINT,ft as VK_FORMAT_R8G8B8A8_UNORM,Ut as VK_FORMAT_R8G8B8_SINT,Bt as VK_FORMAT_R8G8B8_SNORM,St as VK_FORMAT_R8G8B8_SRGB,ot as VK_FORMAT_R8G8B8_UINT,rt as VK_FORMAT_R8G8B8_UNORM,Ft as VK_FORMAT_R8G8_SINT,Tt as VK_FORMAT_R8G8_SNORM,Mt as VK_FORMAT_R8G8_SRGB,Kt as VK_FORMAT_R8G8_UINT,Ot as VK_FORMAT_R8G8_UNORM,At as VK_FORMAT_R8_SINT,Rt as VK_FORMAT_R8_SNORM,it as VK_FORMAT_R8_SRGB,at as VK_FORMAT_R8_UINT,nt as VK_FORMAT_R8_UNORM,be as VK_FORMAT_S8_UINT,Q_ as VK_FORMAT_UNDEFINED,ye as VK_FORMAT_X8_D24_UNORM_PACK32,Ln as read,Nn as write};
//# sourceMappingURL=ktx-parse.module.js.map