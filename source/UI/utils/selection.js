const 创建通用选择控制器 = (配置) => {
    const {
      数据源,
      选择模式 = '单选', // '单选' 或 '多选'
      初始选择 = [],
      唯一标识字段 = 'id',
      选择变更回调,
      键盘控制 = false,
      自定义过滤器
    } = 配置;
  
    let 当前选择 = new Set(初始选择);
  
    const 更新选择 = (新选择) => {
      当前选择 = new Set(新选择);
      选择变更回调 && 选择变更回调(Array.from(当前选择));
    };
  
    const 切换选择 = (项目) => {
      const 标识 = 项目[唯一标识字段];
      if (选择模式 === '单选') {
        更新选择([标识]);
      } else {
        当前选择.has(标识) ? 当前选择.delete(标识) : 当前选择.add(标识);
        更新选择(当前选择);
      }
    };
  
    const 获取选中项 = () => {
      return 数据源.filter(项目 => 当前选择.has(项目[唯一标识字段]));
    };
  
    const 键盘事件处理器 = 键盘控制 ? (事件) => {
      // 实现键盘控制逻辑
      // ...
    } : null;
  
    const 过滤数据 = (关键词) => {
      if (自定义过滤器) {
        return 自定义过滤器(数据源, 关键词);
      }
      // 默认过滤逻辑
      return 数据源.filter(项目 => 
        Object.values(项目).some(值 => 
          String(值).toLowerCase().includes(关键词.toLowerCase())
        )
      );
    };
  
    return {
      切换选择,
      获取选中项,
      键盘事件处理器,
      过滤数据,
      重置选择: () => 更新选择([]),
      全选: () => 更新选择(数据源.map(项目 => 项目[唯一标识字段]))
    };
  };
  
